@startuml
class PetOwner {
    + ownerName : String
    + pets : Animal
    + collar : PetCollar
    +  PetOwner(String, Animal)
    +  PetOwner(String, List<Animal>)
    +  PetOwner(String, Animal, String)
    +  getOwnerName() : String
    +  setOwnerName() : void
    + ownerName : String
    +  getPets() : Animal
    +  setPets() : void
    + pets : Animal
    + @Override showPetInfo() : void
    + @Override feedPet() : void
}
PetOwner o-- Animal
PetOwner *-- PetCollar
PetOwner <|.. OwnerActions
interface OwnerActions {
    +  showPetInfo() : void
    +  feedPet() : void
}
class PetCollar {
    + collarType : String
    +  PetCollar(String)
    +  getCollarType() : String
    +  setCollarType() : void
    + collarType : String
    +  showCollarInfo() : void
}
class Main {
    +  main() : void
    + args : String[]
}
class Manoj {
    +  main() : void
    + args : String[]
    + @Deprecated testAnnotation() : void
}
class A {
    + id : int
    +  print() : void
}
class B {
    +  printDetails() : void
}
B <|-- A
class Cat {
    +  Cat(String)
    + @Override sound() : void
}
Cat <|-- Animal
class Dog {
    + breed : String
    +  Dog(String)
    +  Dog(String, String)
    + @Override sound() : void
    +  play() : void
    +  play() : void
    + toy : String
}
Dog <|-- Animal
abstract class Animal {
    + name : String
    +  Animal(String)
    +  sound() : void
    +  eat() : void
}
@enduml
